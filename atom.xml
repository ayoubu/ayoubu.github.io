<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>落空的个人博客</title>
  <icon>https://ayoubu.github.io/icon.png</icon>
  <subtitle>我慢慢明白了为什么我不快乐，因为我总是期待一个结果。</subtitle>
  <link href="https://ayoubu.github.io/atom.xml" rel="self"/>
  
  <link href="https://ayoubu.github.io/"/>
  <updated>2020-11-14T05:21:14.042Z</updated>
  <id>https://ayoubu.github.io/</id>
  
  <author>
    <name>落空</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>简历</title>
    <link href="https://ayoubu.github.io/archives/14882.html"/>
    <id>https://ayoubu.github.io/archives/14882.html</id>
    <published>2020-11-14T13:12:19.000Z</published>
    <updated>2020-11-14T05:21:14.042Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;img src=&quot;https://i.imgur.com/4YmKxwU.jpeg&quot; alt=&quot;&quot; style=&quot;zoom:5%;&quot; /&gt;

&lt;h2 id=&quot;个人信息&quot;&gt;&lt;a href=&quot;#个人信息&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="简历" scheme="https://ayoubu.github.io/categories/%E7%AE%80%E5%8E%86/"/>
    
    
    <category term="简历" scheme="https://ayoubu.github.io/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>506-Chapter1</title>
    <link href="https://ayoubu.github.io/archives/16280.html"/>
    <id>https://ayoubu.github.io/archives/16280.html</id>
    <published>2020-10-20T15:04:20.000Z</published>
    <updated>2020-11-14T05:16:28.245Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;一些定义和区别-（Some-Definitions-and-Distinctions）&quot;&gt;&lt;a href=&quot;#一些定义和区别-（Some-Definitions-and-Distinctions）&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="USM" scheme="https://ayoubu.github.io/categories/USM/"/>
    
    <category term="RESEARCH &amp; CONSULTANCY &amp; PROFESSIONAL SKILLS" scheme="https://ayoubu.github.io/categories/USM/RESEARCH-CONSULTANCY-PROFESSIONAL-SKILLS/"/>
    
    
    <category term="CDS506" scheme="https://ayoubu.github.io/tags/CDS506/"/>
    
    <category term="CONSULTANCY" scheme="https://ayoubu.github.io/tags/CONSULTANCY/"/>
    
  </entry>
  
  <entry>
    <title>505-Chapter2</title>
    <link href="https://ayoubu.github.io/archives/12584.html"/>
    <id>https://ayoubu.github.io/archives/12584.html</id>
    <published>2020-10-19T16:09:20.000Z</published>
    <updated>2020-11-14T05:16:28.239Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;数据抽象简介&quot;&gt;&lt;a href=&quot;#数据抽象简介&quot; class=&quot;headerlink&quot; title=&quot;数据抽象简介&quot;&gt;&lt;/a&gt;数据抽象简介&lt;/h2&gt;&lt;p&gt;四种基本的数据集类型：&lt;strong&gt;tables, networks, fields and</summary>
        
      
    
    
    
    <category term="USM" scheme="https://ayoubu.github.io/categories/USM/"/>
    
    <category term="DATA VISUALISATION &amp; VISUAL ANALYTICS" scheme="https://ayoubu.github.io/categories/USM/DATA-VISUALISATION-VISUAL-ANALYTICS/"/>
    
    
    <category term="CDS505" scheme="https://ayoubu.github.io/tags/CDS505/"/>
    
    <category term="Data Abstraction" scheme="https://ayoubu.github.io/tags/Data-Abstraction/"/>
    
  </entry>
  
  <entry>
    <title>Chapter 1</title>
    <link href="https://ayoubu.github.io/archives/33679.html"/>
    <id>https://ayoubu.github.io/archives/33679.html</id>
    <published>2020-10-18T15:48:32.000Z</published>
    <updated>2020-11-14T05:16:28.251Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;自然语言处理是几乎是和计算机一同诞生的，从一开始，人们就希望计算机可以读懂人类的语言，与此相关的有：语音和语言处理、人类语言技术、自然语言处理、计算机语言学和语音识别与合成。&lt;/p&gt;
&lt;p&gt;与此相关的应用有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对话代理（conversational agent），如HAL。&lt;/li&gt;
&lt;li&gt;对话系统&lt;/li&gt;
&lt;li&gt;机器翻译系统&lt;/li&gt;
&lt;li&gt;基于网络的自动问答系统&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="USM" scheme="https://ayoubu.github.io/categories/USM/"/>
    
    <category term="TEXT AND SPEECH ANALYTICS" scheme="https://ayoubu.github.io/categories/USM/TEXT-AND-SPEECH-ANALYTICS/"/>
    
    
    <category term="CDS522" scheme="https://ayoubu.github.io/tags/CDS522/"/>
    
  </entry>
  
  <entry>
    <title>CDS505-Weeks1</title>
    <link href="https://ayoubu.github.io/archives/27317.html"/>
    <id>https://ayoubu.github.io/archives/27317.html</id>
    <published>2020-10-13T11:26:26.000Z</published>
    <updated>2020-11-14T05:16:28.248Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是可视化（Visualization）&quot;&gt;&lt;a href=&quot;#什么是可视化（Visualization）&quot; class=&quot;headerlink&quot; title=&quot;什么是可视化（Visualization）&quot;&gt;&lt;/a&gt;什么是可视化（Visualization）&lt;/h2&gt;&lt;p&gt;有几个可视化经典的例子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Minard’s Napolean’s Army map&lt;/li&gt;
&lt;li&gt;John Snow’s cholera map&lt;/li&gt;
&lt;li&gt;Fairplay’s Business Graphics&lt;/li&gt;
&lt;li&gt;Harry Beck’s London Underground map&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;可视化的定义&quot;&gt;&lt;a href=&quot;#可视化的定义&quot; class=&quot;headerlink&quot; title=&quot;可视化的定义&quot;&gt;&lt;/a&gt;可视化的定义&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;：基于计算机的可视化可以对数据进行一种视觉化的表示，旨在帮助人们更有效地执行任务。也就是说，可视化的目的是为了增强人的能力而不是代替人。&lt;/p&gt;</summary>
    
    
    
    <category term="USM" scheme="https://ayoubu.github.io/categories/USM/"/>
    
    <category term="DATA VISUALISATION &amp; VISUAL ANALYTICS" scheme="https://ayoubu.github.io/categories/USM/DATA-VISUALISATION-VISUAL-ANALYTICS/"/>
    
    
    <category term="CDS505" scheme="https://ayoubu.github.io/tags/CDS505/"/>
    
  </entry>
  
  <entry>
    <title>离散值的概率分布</title>
    <link href="https://ayoubu.github.io/archives/33155.html"/>
    <id>https://ayoubu.github.io/archives/33155.html</id>
    <published>2020-09-29T17:12:54.000Z</published>
    <updated>2020-11-14T05:16:28.277Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;二项分布&quot;&gt;&lt;a href=&quot;#二项分布&quot; class=&quot;headerlink&quot; title=&quot;二项分布&quot;&gt;&lt;/a&gt;二项分布&lt;/h2&gt;&lt;p&gt;二项分布的具体形状由n与p决定。因此，二项分布（binomial distribution）也能记为 Bn(n,p)。&lt;/p&gt;
&lt;p&gt;在我们求二项分布中某个条件出现的次数的概率时，只要将每种情况的概率相加就好，二项分布每种排列组合的概率相等。对于我们求任意$n、p与k$ 的条件下 $P(X=k)$ 的值，有:&lt;/p&gt;
&lt;p&gt;$P(X=k)=C_n^kp^kq^{n-k}$   $(k=0,1,2,···,n)$&lt;/p&gt;
&lt;h2 id=&quot;期望值&quot;&gt;&lt;a href=&quot;#期望值&quot; class=&quot;headerlink&quot; title=&quot;期望值&quot;&gt;&lt;/a&gt;期望值&lt;/h2&gt;&lt;p&gt;有一组离散值，每个值出现的概率之和为1。我们可以想象这些离散值占的面积为它们出现的概率，而它们值即为高度，而我们求期望其实就是在求这些值的平均高度。即：&lt;/p&gt;
&lt;p&gt;$E|X| = (高1)×(底面积1)+(高2)×(底面积2)+(高3)×(底面积3)···+(高n)×(底面积n)$&lt;/p&gt;</summary>
    
    
    
    <category term="程序员的数学" scheme="https://ayoubu.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%95%B0%E5%AD%A6/"/>
    
    <category term="概率统计" scheme="https://ayoubu.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%95%B0%E5%AD%A6/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/"/>
    
    
    <category term="统计学" scheme="https://ayoubu.github.io/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>概率统计学习笔记-第二章</title>
    <link href="https://ayoubu.github.io/archives/13532.html"/>
    <id>https://ayoubu.github.io/archives/13532.html</id>
    <published>2020-09-27T15:42:11.000Z</published>
    <updated>2020-11-14T05:16:28.260Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;条件概率理解&quot;&gt;&lt;a href=&quot;#条件概率理解&quot; class=&quot;headerlink&quot; title=&quot;条件概率理解&quot;&gt;&lt;/a&gt;条件概率理解&lt;/h2&gt;&lt;p&gt;条件概率表示在某种情况下某个事件发生的概率。比如，P(工厂|A) 表示A县中工厂所占的比例。它其实就是A县中工厂的面积÷A县所占的面积。A县中工厂的面积我们表示为P(A，工厂)。A县所占的面积，表示为P(A)。&lt;/p&gt;
&lt;p&gt;我们假设A县和其它县组成了一个整体1，比如我们有三个县，因此：&lt;code&gt;P(A)+P(B)+P(C) = 1&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在我们的表达中，P(工厂|A) 和 P(A|工厂)两者是不同的，因为一个分母是A县，一个分母是全国的面积：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P(工厂|A) – 表示 A县中工厂所占的面积。&lt;/li&gt;
&lt;li&gt;P(A|工厂) – 表示所有的工厂面积中，A县所占的面积。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="程序员的数学" scheme="https://ayoubu.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%95%B0%E5%AD%A6/"/>
    
    <category term="概率统计" scheme="https://ayoubu.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%95%B0%E5%AD%A6/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/"/>
    
    
    <category term="条件概率" scheme="https://ayoubu.github.io/tags/%E6%9D%A1%E4%BB%B6%E6%A6%82%E7%8E%87/"/>
    
    <category term="联合概率" scheme="https://ayoubu.github.io/tags/%E8%81%94%E5%90%88%E6%A6%82%E7%8E%87/"/>
    
    <category term="边缘概率" scheme="https://ayoubu.github.io/tags/%E8%BE%B9%E7%BC%98%E6%A6%82%E7%8E%87/"/>
    
    <category term="独立性" scheme="https://ayoubu.github.io/tags/%E7%8B%AC%E7%AB%8B%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>概率统计学习笔记-第一章</title>
    <link href="https://ayoubu.github.io/archives/42150.html"/>
    <id>https://ayoubu.github.io/archives/42150.html</id>
    <published>2020-09-26T17:44:25.000Z</published>
    <updated>2020-11-14T05:16:28.255Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;概率问题&quot;&gt;&lt;a href=&quot;#概率问题&quot; class=&quot;headerlink&quot; title=&quot;概率问题&quot;&gt;&lt;/a&gt;概率问题&lt;/h2&gt;&lt;h3 id=&quot;蒙提霍尔问题&quot;&gt;&lt;a href=&quot;#蒙提霍尔问题&quot; class=&quot;headerlink&quot; title=&quot;蒙提霍尔问题&quot;&gt;&lt;/a&gt;蒙提霍尔问题&lt;/h3&gt;&lt;p&gt;有一个这个游戏的玩法是：参赛者会看见三扇关闭了的门，其中一扇的后面有一辆&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%B1%BD%E8%BB%8A&quot;&gt;汽车&lt;/a&gt;或者是奖品，选中后面有车的那扇门就可以赢得该汽车或奖品，而另外两扇门后面则各藏有一只&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%B1%B1%E7%BE%8A&quot;&gt;山羊&lt;/a&gt;。当参赛者选定了一扇门，但未去开启它的时候，知道门后情形的节目主持人会开启剩下两扇门的其中一扇，露出其中一只山羊。主持人其后会问参赛者要不要换另一扇仍然关上的门。问题是：换另一扇门会否增加参赛者赢得汽车的几率？如果严格按照上述的条件的话，答案是&lt;strong&gt;会&lt;/strong&gt;。换门的话，赢得汽车的几率是2/3。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解答：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有三种可能的情况，全部都有相等的可能性（1/3）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参赛者挑汽车，主持人挑两头羊的任何一头。转换将失败。&lt;/li&gt;
&lt;li&gt;参赛者挑A羊，主持人挑B羊。转换将赢得汽车。&lt;/li&gt;
&lt;li&gt;参赛者挑B羊，主持人挑A羊。转换将赢得汽车。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后的三种结果中有两种都是转换后赢了，所以换门的话赢得汽车的概率是2/3.&lt;/p&gt;</summary>
    
    
    
    <category term="程序员的数学" scheme="https://ayoubu.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%95%B0%E5%AD%A6/"/>
    
    <category term="概率统计" scheme="https://ayoubu.github.io/categories/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%95%B0%E5%AD%A6/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1/"/>
    
    
    <category term="统计学" scheme="https://ayoubu.github.io/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Scrapy 框架学习</title>
    <link href="https://ayoubu.github.io/archives/58909.html"/>
    <id>https://ayoubu.github.io/archives/58909.html</id>
    <published>2020-09-18T12:32:41.000Z</published>
    <updated>2020-09-23T04:02:15.981Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;scrapy-的基础概念&quot;&gt;&lt;a href=&quot;#scrapy-的基础概念&quot; class=&quot;headerlink&quot; title=&quot;scrapy 的基础概念&quot;&gt;&lt;/a&gt;scrapy 的基础概念&lt;/h2&gt;&lt;p&gt;在之前学的&lt;code&gt;requests + selenium&lt;/code&gt; 已经可以解决90%的爬虫需求了，而学习 scrapy 是为了让我们爬虫更快，更强。从而提高我们爬虫的效率和速度。&lt;/p&gt;
&lt;h3 id=&quot;什么是-scrapy&quot;&gt;&lt;a href=&quot;#什么是-scrapy&quot; class=&quot;headerlink&quot; title=&quot;什么是 scrapy&quot;&gt;&lt;/a&gt;什么是 scrapy&lt;/h3&gt;&lt;p&gt;Scrapy 是一个为了&lt;strong&gt;爬取网站数据&lt;/strong&gt; ，&lt;strong&gt;提取结构性数据&lt;/strong&gt; 而编写的应用&lt;strong&gt;框架&lt;/strong&gt; ，我们只需要实现少量的代码，就能够快速的抓取。（框可能包含了多个模块，而模块只是负责单一功能）&lt;/p&gt;
&lt;p&gt;Srcapy 使用了 Twisted[‘twistid’] 异步网络框架，可以加快我们的下载速度。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://scrapy-chs.readthedocs.io/zh_CN/1.0/intro/overview.html&quot;&gt;Scrapy 中文文档&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="数据获取" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="爬虫" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="Scrapy" scheme="https://ayoubu.github.io/tags/Scrapy/"/>
    
  </entry>
  
  <entry>
    <title>动态html数据获取</title>
    <link href="https://ayoubu.github.io/archives/32542.html"/>
    <id>https://ayoubu.github.io/archives/32542.html</id>
    <published>2020-09-17T10:42:14.000Z</published>
    <updated>2020-09-20T13:18:15.243Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;动态HTML技术了解&quot;&gt;&lt;a href=&quot;#动态HTML技术了解&quot; class=&quot;headerlink&quot; title=&quot;动态HTML技术了解&quot;&gt;&lt;/a&gt;动态HTML技术了解&lt;/h2&gt;&lt;img src=&quot;https://i.imgur.com/SEToUXO.png&quot; alt=&quot;动态HTML技术了解&quot; style=&quot;zoom:80%;&quot; /&gt;

&lt;h2 id=&quot;Selenium-和-PhantomJS&quot;&gt;&lt;a href=&quot;#Selenium-和-PhantomJS&quot; class=&quot;headerlink&quot; title=&quot;Selenium 和 PhantomJS&quot;&gt;&lt;/a&gt;Selenium 和 PhantomJS&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Selenium&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Selenium 是一个 Web 的自动化测试工具，最初是为网站自动化测试而开发的，Selenium 可以直接运行在浏览器上，它支持所有主流的浏览器（包括 PhantomJS 这种无界面的浏览器），可以接收指令，让浏览器自动加载页面，获取需要的数据，甚至页面截屏&lt;/p&gt;</summary>
    
    
    
    <category term="数据获取" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="爬虫" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="爬虫" scheme="https://ayoubu.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="动态html" scheme="https://ayoubu.github.io/tags/%E5%8A%A8%E6%80%81html/"/>
    
    <category term="数据获取" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
  </entry>
  
  <entry>
    <title>数据提取方法</title>
    <link href="https://ayoubu.github.io/archives/20690.html"/>
    <id>https://ayoubu.github.io/archives/20690.html</id>
    <published>2020-09-12T16:38:19.000Z</published>
    <updated>2020-09-20T13:21:50.270Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h2&gt;&lt;h3 id=&quot;数据提取&quot;&gt;&lt;a href=&quot;#数据提取&quot; class=&quot;headerlink&quot; title=&quot;数据提取&quot;&gt;&lt;/a&gt;数据提取&lt;/h3&gt;&lt;p&gt;数据提取就是从响应中获取我们想要的数据的过程。提取出的数据我们可以结构化后保存在我们的数据库中。&lt;/p&gt;
&lt;h3 id=&quot;数据分类&quot;&gt;&lt;a href=&quot;#数据分类&quot; class=&quot;headerlink&quot; title=&quot;数据分类&quot;&gt;&lt;/a&gt;数据分类&lt;/h3&gt;&lt;p&gt;数据主要分为&lt;strong&gt;结构化数据&lt;/strong&gt;和&lt;strong&gt;非结构化数据&lt;/strong&gt;。主要是看数据的规律是否明显。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;数据类型&lt;/th&gt;
&lt;th&gt;示例&lt;/th&gt;
&lt;th&gt;处理方法&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;结构化数据&lt;/td&gt;
&lt;td&gt;json、xml&lt;/td&gt;
&lt;td&gt;转换为python数据类型&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;非结构化数据&lt;/td&gt;
&lt;td&gt;html 等&lt;/td&gt;
&lt;td&gt;正则表达式、xpath&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="数据获取" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="爬虫" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="爬虫" scheme="https://ayoubu.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="json" scheme="https://ayoubu.github.io/tags/json/"/>
    
    <category term="数据提取" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E6%8F%90%E5%8F%96/"/>
    
    <category term="正则表达式" scheme="https://ayoubu.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    <category term="re" scheme="https://ayoubu.github.io/tags/re/"/>
    
    <category term="XPATH" scheme="https://ayoubu.github.io/tags/XPATH/"/>
    
  </entry>
  
  <entry>
    <title>爬虫编写技巧</title>
    <link href="https://ayoubu.github.io/archives/40952.html"/>
    <id>https://ayoubu.github.io/archives/40952.html</id>
    <published>2020-09-12T11:48:04.000Z</published>
    <updated>2020-09-20T13:12:34.408Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;寻找POST的地址&quot;&gt;&lt;a href=&quot;#寻找POST的地址&quot; class=&quot;headerlink&quot; title=&quot;寻找POST的地址&quot;&gt;&lt;/a&gt;寻找POST的地址&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在form表单中寻找action对应的url地址&lt;ul&gt;
&lt;li&gt;post的数据是input标签中name的值作为键，真正的用户名密码作为值的字典，post的url地址就是action对应的url地址&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;抓包，寻找登录的url地址&lt;ul&gt;
&lt;li&gt;勾选perserve log按钮，防止页面跳转后找不到跳转的url&lt;/li&gt;
&lt;li&gt;寻找post数据，确定参数（看url中的参数和post数据中的参数）&lt;ul&gt;
&lt;li&gt;参数不会变的时候直接使用，比如密码不是动态加密的时候&lt;/li&gt;
&lt;li&gt;参数会变的时候&lt;ul&gt;
&lt;li&gt;看当前参数是否在当前相应中，比如通过前一次的相应来得到当前的值&lt;/li&gt;
&lt;li&gt;还是参数是通过js生成，此时就需要定位到相应的js中进行查看。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="数据获取" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="爬虫" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="爬虫" scheme="https://ayoubu.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>命令行运行python程序</title>
    <link href="https://ayoubu.github.io/archives/63676.html"/>
    <id>https://ayoubu.github.io/archives/63676.html</id>
    <published>2020-09-11T10:32:48.000Z</published>
    <updated>2020-09-20T13:12:34.401Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;如何在命令行运行-python-程序&quot;&gt;&lt;a href=&quot;#如何在命令行运行-python-程序&quot; class=&quot;headerlink&quot; title=&quot;如何在命令行运行 python 程序&quot;&gt;&lt;/a&gt;如何在命令行运行 python 程序&lt;/h2&gt;&lt;p&gt;最简单的情况就是，在当前python程序所在的路径下打开命令行终端，然后直接输入：&lt;code&gt;python 程序名.py&lt;/code&gt; 就可以运行。&lt;/p&gt;
&lt;p&gt;但是有时候我们需要向程序中输入参数，我们可以直接使用&lt;code&gt;x = input()&lt;/code&gt; ，但是这样会多一步交互，不够简洁。&lt;/p&gt;
&lt;p&gt;在命令行中，如果我们输入：&lt;code&gt;python 程序名.py 1 2 3&lt;/code&gt;，我们实际上可以得到一个列表：&lt;code&gt;[&amp;#39;程序名.py&amp;#39;, &amp;#39;1&amp;#39;, &amp;#39;2&amp;#39;, &amp;#39;3&amp;#39;]&lt;/code&gt;，而后面的这些输入其实是可以作为参数传给程序的。&lt;/p&gt;
&lt;p&gt;我们只需要在程序中使用&lt;code&gt;sys.argv[]&lt;/code&gt;来接收就行，如果我们写&lt;code&gt;x = sys.argv[1]&lt;/code&gt;表示我们接收的值为第一个，即&lt;code&gt;1&lt;/code&gt;，此时&lt;code&gt;x=1&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="杂记" scheme="https://ayoubu.github.io/categories/Python/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="技巧" scheme="https://ayoubu.github.io/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Requests学习</title>
    <link href="https://ayoubu.github.io/archives/45141.html"/>
    <id>https://ayoubu.github.io/archives/45141.html</id>
    <published>2020-09-09T20:07:30.000Z</published>
    <updated>2020-09-20T13:17:34.619Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Requests-安装&quot;&gt;&lt;a href=&quot;#Requests-安装&quot; class=&quot;headerlink&quot; title=&quot;Requests 安装&quot;&gt;&lt;/a&gt;Requests 安装&lt;/h2&gt;&lt;p&gt;命令行安装：&lt;code&gt;python -m pip install requests&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果你安装了Anaconda，直接在Prompt中使用：&lt;code&gt;pip install requests&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果你是下载了requests的包，直接cd到requests文件夹中：&lt;code&gt;python - m pip install&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;快速开始&quot;&gt;&lt;a href=&quot;#快速开始&quot; class=&quot;headerlink&quot; title=&quot;快速开始&quot;&gt;&lt;/a&gt;快速开始&lt;/h2&gt;&lt;h3 id=&quot;发送请求&quot;&gt;&lt;a href=&quot;#发送请求&quot; class=&quot;headerlink&quot; title=&quot;发送请求&quot;&gt;&lt;/a&gt;发送请求&lt;/h3&gt;&lt;p&gt;在安装好Requests库之后，我们来看看Requests怎么使用。&lt;/p&gt;</summary>
    
    
    
    <category term="数据获取" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="爬虫" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="爬虫" scheme="https://ayoubu.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="Requests" scheme="https://ayoubu.github.io/tags/Requests/"/>
    
  </entry>
  
  <entry>
    <title>爬虫学习01</title>
    <link href="https://ayoubu.github.io/archives/48798.html"/>
    <id>https://ayoubu.github.io/archives/48798.html</id>
    <published>2020-09-09T16:51:31.000Z</published>
    <updated>2020-09-20T13:12:34.406Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;爬虫的简介&quot;&gt;&lt;a href=&quot;#爬虫的简介&quot; class=&quot;headerlink&quot; title=&quot;爬虫的简介&quot;&gt;&lt;/a&gt;爬虫的简介&lt;/h2&gt;&lt;p&gt;网络爬虫（又被称为网页蜘蛛，网络机器人），就是模拟客户端发送网络请求，接受请求响应。是一种按照一定的&lt;strong&gt;规则&lt;/strong&gt;，&lt;strong&gt;自动&lt;/strong&gt;地抓取互联网信息的&lt;strong&gt;程序&lt;/strong&gt;。只要浏览器能做的事情，原则上爬虫都可以做。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;通用爬虫：&lt;/strong&gt;通常指搜索引擎的爬虫&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;聚焦爬虫：&lt;/strong&gt;针对特定网站的爬虫&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;工作流程：&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&quot;https://i.imgur.com/0Dx5H2T.png&quot; alt=&quot;通用爬虫和聚焦爬虫工作流程&quot; style=&quot;zoom:80%;&quot; /&gt;</summary>
    
    
    
    <category term="数据获取" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/"/>
    
    <category term="爬虫" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E8%8E%B7%E5%8F%96/%E7%88%AC%E8%99%AB/"/>
    
    
    <category term="爬虫" scheme="https://ayoubu.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>MongDB练习</title>
    <link href="https://ayoubu.github.io/archives/53312.html"/>
    <id>https://ayoubu.github.io/archives/53312.html</id>
    <published>2020-09-09T15:19:48.000Z</published>
    <updated>2020-09-21T01:58:47.144Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;豆瓣数据相关&quot;&gt;&lt;a href=&quot;#豆瓣数据相关&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/MongoDB/"/>
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/tags/MongoDB/"/>
    
    <category term="数据读写" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%86%99/"/>
    
  </entry>
  
  <entry>
    <title>MongDB 高级功能</title>
    <link href="https://ayoubu.github.io/archives/61509.html"/>
    <id>https://ayoubu.github.io/archives/61509.html</id>
    <published>2020-09-08T15:02:58.000Z</published>
    <updated>2020-09-09T07:48:36.902Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;聚合和管道&quot;&gt;&lt;a href=&quot;#聚合和管道&quot; class=&quot;headerlink&quot; title=&quot;聚合和管道&quot;&gt;&lt;/a&gt;聚合和管道&lt;/h2&gt;&lt;p&gt;聚合(aggregate)是基于数据处理的聚合管道，每个文档通过一个由多个阶段(stage) 组成的管道，可以对每个阶段的管道进行分组、过滤等功能，然后经过一系列的处理，输出相应的结果。&lt;/p&gt;
&lt;p&gt;表达式：&lt;code&gt;db.集合名称.aggregate(&amp;#123;管道:&amp;#123;表达式&amp;#125;&amp;#125;)&lt;/code&gt; &lt;/p&gt;
&lt;img src=&quot;https://i.imgur.com/DL72HF6.jpeg&quot; alt=&quot;聚合原理图&quot; style=&quot;zoom:80%;&quot; /&gt;</summary>
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/MongoDB/"/>
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Python MongoDB</title>
    <link href="https://ayoubu.github.io/archives/18082.html"/>
    <id>https://ayoubu.github.io/archives/18082.html</id>
    <published>2020-09-06T11:38:34.000Z</published>
    <updated>2020-09-09T08:17:22.509Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;PyMongo&quot;&gt;&lt;a href=&quot;#PyMongo&quot; class=&quot;headerlink&quot; title=&quot;PyMongo&quot;&gt;&lt;/a&gt;PyMongo&lt;/h2&gt;&lt;p&gt;在Python中需要一个MongoDB的驱动程序来访问MongoDB的数据库，本文将主要介绍Python中的MongoDB驱动程序“PyMongo”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装：&lt;/strong&gt; &lt;code&gt;pip install pymongo&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;测试：&lt;/strong&gt; &lt;code&gt;import pymongo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果运行后没有报错，则说明pymongo包安装成功。&lt;/p&gt;
&lt;h2 id=&quot;PyMongo基本操作&quot;&gt;&lt;a href=&quot;#PyMongo基本操作&quot; class=&quot;headerlink&quot; title=&quot;PyMongo基本操作&quot;&gt;&lt;/a&gt;PyMongo基本操作&lt;/h2&gt;&lt;h3 id=&quot;创建连接&quot;&gt;&lt;a href=&quot;#创建连接&quot; class=&quot;headerlink&quot; title=&quot;创建连接&quot;&gt;&lt;/a&gt;创建连接&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;需要在本地安装MongoDB社区版的服务，具体查看我的上一篇文档。&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;在使用MongoDB创建数据库之前，需要先新建一个MongoClient(Mongo的客户端) 对象，这个对象需要使用一个具体的MongoDB的访问连接，如果是在本地开启的服务，这个连接默认为：&lt;code&gt;&amp;quot;mongodb://localhost:27017/&amp;quot;&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/MongoDB/"/>
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/tags/MongoDB/"/>
    
    <category term="PyMongo" scheme="https://ayoubu.github.io/tags/PyMongo/"/>
    
    <category term="Python" scheme="https://ayoubu.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>什么是json</title>
    <link href="https://ayoubu.github.io/archives/49506.html"/>
    <id>https://ayoubu.github.io/archives/49506.html</id>
    <published>2020-09-05T11:35:13.000Z</published>
    <updated>2020-09-09T06:54:19.286Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;JSON的全称是 ”JavaScript Object Notation“，意思是JavaScript对象表示法，它是一种基于文本，独立于语言的轻量级数据交换格式。XML也是一种数据交换格式，为什么没有选择XML呢？因为XML虽然可以作为跨平台的数据交换格式，但是在JS（JavaScript）中处理XML非常不方便，同时XML标记比数据多，增加了交换产生的流量，而JSON没有附加的任何标记，在JS中可作为对象处理，所以我们更倾向于选择JSON来交换数据。&lt;/p&gt;
&lt;h2 id=&quot;JSON的两种数据结构&quot;&gt;&lt;a href=&quot;#JSON的两种数据结构&quot; class=&quot;headerlink&quot; title=&quot;JSON的两种数据结构&quot;&gt;&lt;/a&gt;JSON的两种数据结构&lt;/h2&gt;&lt;p&gt;JSON有两种表示结构，对象和数组。对象结构以&lt;code&gt;&amp;#123;&lt;/code&gt; 大括号开始，以&lt;code&gt;&amp;#125;&lt;/code&gt;大括号结束。中间的信息以键值对存储，并且以&lt;code&gt;,&lt;/code&gt;分割每条信息（最后一条数据不用加&lt;code&gt;,&lt;/code&gt;）。键值对的格式为：&lt;code&gt;key:value&lt;/code&gt;，即冒号左边为关键字，冒号右边为值。&lt;/p&gt;</summary>
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="json" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/json/"/>
    
    
    <category term="json" scheme="https://ayoubu.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB简介</title>
    <link href="https://ayoubu.github.io/archives/52778.html"/>
    <id>https://ayoubu.github.io/archives/52778.html</id>
    <published>2020-09-05T10:58:05.000Z</published>
    <updated>2020-09-09T06:54:19.272Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;MongoDB简介&quot;&gt;&lt;a href=&quot;#MongoDB简介&quot; class=&quot;headerlink&quot; title=&quot;MongoDB简介&quot;&gt;&lt;/a&gt;MongoDB简介&lt;/h2&gt;&lt;p&gt;MongoDB是一个基于分布式文件存储的数据库，由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。&lt;/p&gt;
&lt;p&gt;MongoDB将数据存储为一个文档，数据结构由键值对(Key : value)组成，MongoDB文档类似于JSON对象，字段值可以包含其它文档，数组及文档数组。&lt;/p&gt;
&lt;p&gt;MongoDB服务端可运行在Linux、Windows和Mac OS平台，支持32位和64位应用，默认端口为27017。本文所展示的为Windows平台的安装及使用。&lt;/p&gt;
&lt;p&gt;MongoDB支持各种编程语言：Python、Java、C++、PHP、C#等多种语言。&lt;/p&gt;
&lt;h2 id=&quot;MongoDB的优势&quot;&gt;&lt;a href=&quot;#MongoDB的优势&quot; class=&quot;headerlink&quot; title=&quot;MongoDB的优势&quot;&gt;&lt;/a&gt;MongoDB的优势&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;易扩展：&lt;/strong&gt; NoSQL（非关系型数据库）数据库种类繁多，但是一个共同的特点都是去掉关系型数据库的关系特性。数据之间无关系，这样就非常容易扩展。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大数据量，高性能：&lt;/strong&gt; NoSQL数据库都具有非常高的读写性能，尤其在大数据量下，同样表现优秀。得益于它的无关系性，数据的结构简单&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活的数据模型：&lt;/strong&gt; NoSQL无需事先为要存储的数据建立字段，随时可以存储自定义的数据格式。而在关系型数据库里，增删字段是一件非常麻烦的事情。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt; 由于它每条数据都是单独存储的，因此在存储过程中可能会包含大量重复信息，非常占用存储空间。&lt;/p&gt;
&lt;h2 id=&quot;MongDB的安装（windows）&quot;&gt;&lt;a href=&quot;#MongDB的安装（windows）&quot; class=&quot;headerlink&quot; title=&quot;MongDB的安装（windows）&quot;&gt;&lt;/a&gt;MongDB的安装（windows）&lt;/h2&gt;</summary>
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/MongoDB/"/>
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/tags/MongoDB/"/>
    
    <category term="PyMongo" scheme="https://ayoubu.github.io/tags/PyMongo/"/>
    
  </entry>
  
</feed>
