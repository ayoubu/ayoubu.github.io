<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>落空的个人博客</title>
  <icon>https://ayoubu.github.io/icon.png</icon>
  <subtitle>我慢慢明白了为什么我不快乐，因为我总是期待一个结果。</subtitle>
  <link href="https://ayoubu.github.io/atom.xml" rel="self"/>
  
  <link href="https://ayoubu.github.io/"/>
  <updated>2020-09-01T14:05:43.565Z</updated>
  <id>https://ayoubu.github.io/</id>
  
  <author>
    <name>落空</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Excel学习之图表</title>
    <link href="https://ayoubu.github.io/archives/27947.html"/>
    <id>https://ayoubu.github.io/archives/27947.html</id>
    <published>2020-09-01T12:29:12.000Z</published>
    <updated>2020-09-01T14:05:43.565Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;如何制作图表&quot;&gt;&lt;a href=&quot;#如何制作图表&quot; class=&quot;headerlink&quot; title=&quot;如何制作图表&quot;&gt;&lt;/a&gt;如何制作图表&lt;/h2&gt;&lt;p&gt;Excel中插入图表，首先选中数据区域，在插入选项卡中的图表区域中选择合适的图表，此时就会在表格中插入一个图表。然后在菜单栏中的设计选项卡下，点击添加元素，这里面有我们常用的图表设计的所有元素，可以根据自己的需要选择修改。&lt;/p&gt;
&lt;h2 id=&quot;如何制作复合图表&quot;&gt;&lt;a href=&quot;#如何制作复合图表&quot; class=&quot;headerlink&quot; title=&quot;如何制作复合图表&quot;&gt;&lt;/a&gt;如何制作复合图表&lt;/h2&gt;&lt;p&gt;复合图表是指在一个图表中，反应多个不同的信息，且不同信息的表现方式也不同，比如条形图和折线图相结合。我们假设我们要处理的数据如下图所示：&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="图表" scheme="https://ayoubu.github.io/tags/%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之数据透视表</title>
    <link href="https://ayoubu.github.io/archives/50892.html"/>
    <id>https://ayoubu.github.io/archives/50892.html</id>
    <published>2020-08-31T11:40:38.000Z</published>
    <updated>2020-09-01T04:30:19.678Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;初识数据透视表&quot;&gt;&lt;a href=&quot;#初识数据透视表&quot; class=&quot;headerlink&quot; title=&quot;初识数据透视表&quot;&gt;&lt;/a&gt;初识数据透视表&lt;/h2&gt;&lt;p&gt;数据透视表在使用的时候非常简单，但是我们得先想清楚一些问题，再开始动手。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;罗列什么、汇总什么&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;把需要罗列的部分放入行区域当中，需要计算的字段放入值区域当中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;他们是怎样的关系，要按照怎样的顺序来排列&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果是上下级关系的，那我们就全部放在行区域内，如果是交叉区域的，就放在列区域内，在同一个区域就要按照顺序来进行摆放&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以什么方式来进行汇总？是合计数、求平均、还是计数值？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;是否需要分页进行筛选？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用筛选器。&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="数据透视表" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E9%80%8F%E8%A7%86%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之路之微图表</title>
    <link href="https://ayoubu.github.io/archives/4338.html"/>
    <id>https://ayoubu.github.io/archives/4338.html</id>
    <published>2020-08-30T15:27:03.000Z</published>
    <updated>2020-08-31T03:39:16.060Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是微图表&quot;&gt;&lt;a href=&quot;#什么是微图表&quot; class=&quot;headerlink&quot; title=&quot;什么是微图表&quot;&gt;&lt;/a&gt;什么是微图表&lt;/h2&gt;&lt;p&gt;微图表简单的说就是在单元格内绘制的图表，用来直观的反应数据的大小，从而实现数据与图表的一体化。示例如下图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/fnxrIjW.png&quot; alt=&quot;微图表示例&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="微图表" scheme="https://ayoubu.github.io/tags/%E5%BE%AE%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之路-函数</title>
    <link href="https://ayoubu.github.io/archives/13281.html"/>
    <id>https://ayoubu.github.io/archives/13281.html</id>
    <published>2020-08-29T12:09:53.000Z</published>
    <updated>2020-08-30T07:26:09.589Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;函数基础&quot;&gt;&lt;a href=&quot;#函数基础&quot; class=&quot;headerlink&quot; title=&quot;函数基础&quot;&gt;&lt;/a&gt;函数基础&lt;/h2&gt;&lt;p&gt;函数是我们对原本数据进行计算统计或者用来增加字段的一种表达方式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;兼容性函数 — 38&lt;/li&gt;
&lt;li&gt;多维数据集函数 — 7&lt;/li&gt;
&lt;li&gt;数据库函数 — 12&lt;/li&gt;
&lt;li&gt;日期和时间函数  — 22&lt;/li&gt;
&lt;li&gt;工程函数 — 41&lt;/li&gt;
&lt;li&gt;财务函数 — 53&lt;/li&gt;
&lt;li&gt;信息函数 —17&lt;/li&gt;
&lt;li&gt;逻辑函数 — 7&lt;/li&gt;
&lt;li&gt;查找和引用函数 — 20&lt;/li&gt;
&lt;li&gt;数学和三角函数 — 63&lt;/li&gt;
&lt;li&gt;统计函数 — 98&lt;/li&gt;
&lt;li&gt;文本函数 — 27&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="函数" scheme="https://ayoubu.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Excel 快速录入和定位的小技巧</title>
    <link href="https://ayoubu.github.io/archives/57650.html"/>
    <id>https://ayoubu.github.io/archives/57650.html</id>
    <published>2020-08-28T15:16:09.000Z</published>
    <updated>2020-08-29T04:09:35.297Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;相似格式如何一秒快速录入&quot;&gt;&lt;a href=&quot;#相似格式如何一秒快速录入&quot; class=&quot;headerlink&quot; title=&quot;相似格式如何一秒快速录入&quot;&gt;&lt;/a&gt;相似格式如何一秒快速录入&lt;/h2&gt;&lt;p&gt;在数据录入的过程中经常需要录入一些相同的部分，比如同一个省份的开头是相同的，邮箱的后半部分。此时我们可以自定义单元格格式来加速我们数据录入的过程。&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据录入" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BD%95%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之路01</title>
    <link href="https://ayoubu.github.io/archives/21268.html"/>
    <id>https://ayoubu.github.io/archives/21268.html</id>
    <published>2020-08-25T11:55:36.000Z</published>
    <updated>2020-08-28T07:15:29.698Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Excel数据导入&quot;&gt;&lt;a href=&quot;#Excel数据导入&quot; class=&quot;headerlink&quot; title=&quot;Excel数据导入&quot;&gt;&lt;/a&gt;Excel数据导入&lt;/h2&gt;&lt;h3 id=&quot;从网页导入数据&quot;&gt;&lt;a href=&quot;#从网页导入数据&quot; class=&quot;headerlink&quot; title=&quot;从网页导入数据&quot;&gt;&lt;/a&gt;从网页导入数据&lt;/h3&gt;&lt;p&gt;有时候我们需要从网上获取一些数据进行分析，有时复制粘贴可能不是最好的方式，这时候我们可以先试试excel内置的从网页导入数据功能。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;数据--&amp;gt;自网站&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如：我们想对中国&lt;a href=&quot;http://quotes.money.163.com/0600050.html&quot;&gt;中国联通的股票行情&lt;/a&gt; 做一些分析，我们可以按照上述选项，输入对应的网址连接，如下图所示：&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之路00</title>
    <link href="https://ayoubu.github.io/archives/37845.html"/>
    <id>https://ayoubu.github.io/archives/37845.html</id>
    <published>2020-08-25T11:47:09.000Z</published>
    <updated>2020-08-25T03:55:12.668Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Excel的知识体系&quot;&gt;&lt;a href=&quot;#Excel的知识体系&quot; class=&quot;headerlink&quot; title=&quot;Excel的知识体系&quot;&gt;&lt;/a&gt;Excel的知识体系&lt;/h2&gt;&lt;p&gt;用excel处理数据的基本流程如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据导入&lt;/li&gt;
&lt;li&gt;规范规则&lt;/li&gt;
&lt;li&gt;函数运算&lt;/li&gt;
&lt;li&gt;图表制作&lt;/li&gt;
&lt;li&gt;数据分析&lt;/li&gt;
&lt;li&gt;图表导出&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>python之模块</title>
    <link href="https://ayoubu.github.io/archives/53523.html"/>
    <id>https://ayoubu.github.io/archives/53523.html</id>
    <published>2020-08-24T15:28:43.000Z</published>
    <updated>2020-08-25T03:17:41.355Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;模块&quot;&gt;&lt;a href=&quot;#模块&quot; class=&quot;headerlink&quot; title=&quot;模块&quot;&gt;&lt;/a&gt;模块&lt;/h2&gt;&lt;p&gt;模块是一种更高级的封装，它的作用是封装和组织我们写的代码，将代码分割成不同的模块，便于我们的测试和维护。同时模块也可以方便我们对代码的重用。在python中我们接触过的封装有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器  —&amp;gt;  数据的封装&lt;/li&gt;
&lt;li&gt;函数  —&amp;gt;  语句的封装&lt;/li&gt;
&lt;li&gt;类  —&amp;gt;  方法和属性的封装&lt;/li&gt;
&lt;li&gt;模块  —&amp;gt;  模块就是程序&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="模块" scheme="https://ayoubu.github.io/tags/%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>python之魔法方法</title>
    <link href="https://ayoubu.github.io/archives/52592.html"/>
    <id>https://ayoubu.github.io/archives/52592.html</id>
    <published>2020-08-22T11:51:09.000Z</published>
    <updated>2020-08-25T03:19:16.393Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;构造和析构&quot;&gt;&lt;a href=&quot;#构造和析构&quot; class=&quot;headerlink&quot; title=&quot;构造和析构&quot;&gt;&lt;/a&gt;构造和析构&lt;/h2&gt;&lt;h3 id=&quot;init-self-…-方法&quot;&gt;&lt;a href=&quot;#init-self-…-方法&quot; class=&quot;headerlink&quot; title=&quot;__init__(self,[, …]) 方法&quot;&gt;&lt;/a&gt;__init__(self,[, …]) 方法&lt;/h3&gt;&lt;p&gt;魔法方法总是被双下划线包围，例如__init__方法。魔法方法代表了python的强大之处。&lt;/p&gt;
&lt;p&gt;python中的默认构造函数为__init__(self,[, …]) 方法，init函数的返回值必须为None，否则会产生TpyeError的错误。&lt;/p&gt;
&lt;h3 id=&quot;new-cls-…-方法&quot;&gt;&lt;a href=&quot;#new-cls-…-方法&quot; class=&quot;headerlink&quot; title=&quot;__new__(cls,[, …]) 方法&quot;&gt;&lt;/a&gt;__new__(cls,[, …]) 方法&lt;/h3&gt;&lt;p&gt;注：python中创建对象时调用的第一个对象其实并不是init，而是__new__方法，new方法是用来创建类的一个新的实例的，一般情况下我们不需要对new方法进行重写，但是有时后我们继承了某些特殊类，需要修改它的默认创建对象的方式时，可以对new方法进行重写。如下所示。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="魔法方法" scheme="https://ayoubu.github.io/tags/%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>python之类和对象</title>
    <link href="https://ayoubu.github.io/archives/30561.html"/>
    <id>https://ayoubu.github.io/archives/30561.html</id>
    <published>2020-08-21T14:19:20.000Z</published>
    <updated>2020-08-25T03:17:41.355Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;关于类的基本概念&quot;&gt;&lt;a href=&quot;#关于类的基本概念&quot; class=&quot;headerlink&quot; title=&quot;关于类的基本概念&quot;&gt;&lt;/a&gt;关于类的基本概念&lt;/h2&gt;&lt;h3 id=&quot;对象&quot;&gt;&lt;a href=&quot;#对象&quot; class=&quot;headerlink&quot; title=&quot;对象&quot;&gt;&lt;/a&gt;对象&lt;/h3&gt;&lt;p&gt;对象是由&lt;strong&gt;属性&lt;/strong&gt;和&lt;strong&gt;方法&lt;/strong&gt;组成的，属性描述的是对象的一些固有性质，而方法则是对象可以执行的操作。对象是通过实例化类得到的。&lt;/p&gt;
&lt;h3 id=&quot;面向对象的特征&quot;&gt;&lt;a href=&quot;#面向对象的特征&quot; class=&quot;headerlink&quot; title=&quot;面向对象的特征&quot;&gt;&lt;/a&gt;面向对象的特征&lt;/h3&gt;&lt;p&gt;面向对象的主要特征为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封装：将对象的属性和方法进行封装，从而起到保护数据的作用。&lt;/li&gt;
&lt;li&gt;继承：子类自动共享父类之间数据和方法的机制。&lt;/li&gt;
&lt;li&gt;多态：不同对象对同一方法响应不同的方式。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="类" scheme="https://ayoubu.github.io/tags/%E7%B1%BB/"/>
    
    <category term="对象" scheme="https://ayoubu.github.io/tags/%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="class" scheme="https://ayoubu.github.io/tags/class/"/>
    
  </entry>
  
  <entry>
    <title>python之异常处理</title>
    <link href="https://ayoubu.github.io/archives/19524.html"/>
    <id>https://ayoubu.github.io/archives/19524.html</id>
    <published>2020-08-19T17:22:13.000Z</published>
    <updated>2020-08-25T03:17:41.355Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是异常&quot;&gt;&lt;a href=&quot;#什么是异常&quot; class=&quot;headerlink&quot; title=&quot;什么是异常&quot;&gt;&lt;/a&gt;什么是异常&lt;/h2&gt;&lt;p&gt;程序中的异常是区别于错误存在的，错误往往指的是语法或者逻辑上的，最终导致编译器无法编译通过。而异常往往是由不受控制的输入或者输出导致的。在程序设计过程中，对于一些不受控制的输入，最好是引入异常处理。这样可以增强程序的健壮性，不至于遇到点问题程序就崩溃了。&lt;/p&gt;
&lt;h2 id=&quot;Python中的异常处理&quot;&gt;&lt;a href=&quot;#Python中的异常处理&quot; class=&quot;headerlink&quot; title=&quot;Python中的异常处理&quot;&gt;&lt;/a&gt;Python中的异常处理&lt;/h2&gt;&lt;p&gt;和一些高级语言一样，python也引入了try/except/finally语句块来处理异常，除此之外python还有断言(Assertions)来防止一些关键结果出问题。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="异常处理" scheme="https://ayoubu.github.io/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
    <category term="Exception" scheme="https://ayoubu.github.io/tags/Exception/"/>
    
  </entry>
  
  <entry>
    <title>python之文件</title>
    <link href="https://ayoubu.github.io/archives/58554.html"/>
    <id>https://ayoubu.github.io/archives/58554.html</id>
    <published>2020-08-19T11:22:35.000Z</published>
    <updated>2020-08-25T03:17:41.355Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;文件打开模式&quot;&gt;&lt;a href=&quot;#文件打开模式&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="文件" scheme="https://ayoubu.github.io/tags/%E6%96%87%E4%BB%B6/"/>
    
    <category term="os" scheme="https://ayoubu.github.io/tags/os/"/>
    
    <category term="os.path" scheme="https://ayoubu.github.io/tags/os-path/"/>
    
    <category term="pickle" scheme="https://ayoubu.github.io/tags/pickle/"/>
    
  </entry>
  
  <entry>
    <title>python之字典</title>
    <link href="https://ayoubu.github.io/archives/46747.html"/>
    <id>https://ayoubu.github.io/archives/46747.html</id>
    <published>2020-08-18T14:19:06.000Z</published>
    <updated>2020-08-24T02:46:54.194Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Python-字典-Dictionary&quot;&gt;&lt;a href=&quot;#Python-字典-Dictionary&quot; class=&quot;headerlink&quot; title=&quot;Python 字典(Dictionary)&quot;&gt;&lt;/a&gt;Python 字典(Dictionary)&lt;/h2&gt;&lt;p&gt;字典是另一种可变容器模型，且可存储任意类型对象。Python中的字典是唯一的&lt;strong&gt;映射类型&lt;/strong&gt;，与之对应的列表、元组等都为序列类型。&lt;/p&gt;
&lt;p&gt;字典的每个键值 &lt;strong&gt;key=&amp;gt;value&lt;/strong&gt; 对用冒号 &lt;strong&gt;:&lt;/strong&gt; 分割，每个键值对之间用逗号 &lt;strong&gt;,&lt;/strong&gt; 分割，整个字典包括在花括号 &lt;strong&gt;{}&lt;/strong&gt; 中 ,格式如下所示：&lt;code&gt;d = &amp;#123;key1 : value1, key2 : value2 &amp;#125;&lt;/code&gt;，索引的时候直接使用key值就行。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="字典" scheme="https://ayoubu.github.io/tags/%E5%AD%97%E5%85%B8/"/>
    
    <category term="Dictionary" scheme="https://ayoubu.github.io/tags/Dictionary/"/>
    
    <category term="集合" scheme="https://ayoubu.github.io/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>python之函数</title>
    <link href="https://ayoubu.github.io/archives/28278.html"/>
    <id>https://ayoubu.github.io/archives/28278.html</id>
    <published>2020-08-16T15:33:09.000Z</published>
    <updated>2020-08-18T06:58:46.542Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;初识python函数&quot;&gt;&lt;a href=&quot;#初识python函数&quot; class=&quot;headerlink&quot; title=&quot;初识python函数&quot;&gt;&lt;/a&gt;初识python函数&lt;/h2&gt;&lt;p&gt;在python中定义函数的关键字为&lt;strong&gt;def&lt;/strong&gt;，一个完整的函数应该包括函数名、参数、返回值。其中参数和返回值不是必要的。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFirstFunction&lt;/span&gt;():&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&amp;#x27;这是我的第一个函数。&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; MyFirstFunction()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是我的第一个函数。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;形参和实参&quot;&gt;&lt;a href=&quot;#形参和实参&quot; class=&quot;headerlink&quot; title=&quot;形参和实参&quot;&gt;&lt;/a&gt;形参和实参&lt;/h3&gt;&lt;p&gt;函数定义过程中的参数成为形参，因为它只是一个形式，表示占据一个参数的位置。实参就是在函数调用过程中实际传入的参数，此时参数是有值的，代表一定含义的。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="函数" scheme="https://ayoubu.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>python课后作业002</title>
    <link href="https://ayoubu.github.io/archives/7409.html"/>
    <id>https://ayoubu.github.io/archives/7409.html</id>
    <published>2020-08-16T09:44:41.000Z</published>
    <updated>2020-08-18T07:00:39.648Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;什么是BIF？&quot;&gt;&lt;a href=&quot;#什么是BIF？&quot; class=&quot;headerlink&quot; title=&quot;什么是BIF？&quot;&gt;&lt;/a&gt;什么是BIF？&lt;/h3&gt;&lt;p&gt;BIF 就是 Built-in</summary>
        
      
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="课后作业" scheme="https://ayoubu.github.io/categories/Python/%E8%AF%BE%E5%90%8E%E4%BD%9C%E4%B8%9A/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="BIF" scheme="https://ayoubu.github.io/tags/BIF/"/>
    
  </entry>
  
  <entry>
    <title>python之字符串</title>
    <link href="https://ayoubu.github.io/archives/49647.html"/>
    <id>https://ayoubu.github.io/archives/49647.html</id>
    <published>2020-08-15T16:48:26.000Z</published>
    <updated>2020-08-16T07:29:15.616Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;字符串和元组有点类似，可以把字符串理解为一个由字符组成的元组，字符串一旦创建也是不能更改的。也就是说不能通过索引去更改某个字符。但是，python字符串类提供了很多方法，可以帮我们实现这些操作。&lt;/p&gt;
&lt;p&gt;Python 字符串的编写方式多种多样，主要有：Single quotes、Double quotes 还有 Triple quoted 三种形式。&lt;/p&gt;
&lt;h3 id=&quot;Single-quotes&quot;&gt;&lt;a href=&quot;#Single-quotes&quot; class=&quot;headerlink&quot; title=&quot;Single quotes&quot;&gt;&lt;/a&gt;Single quotes&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;print(&lt;span class=&quot;string&quot;&gt;&amp;#x27;I love you&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I love you&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="字符串" scheme="https://ayoubu.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>python 之 tuple</title>
    <link href="https://ayoubu.github.io/archives/51299.html"/>
    <id>https://ayoubu.github.io/archives/51299.html</id>
    <published>2020-08-15T16:20:51.000Z</published>
    <updated>2020-08-16T07:29:40.915Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;元组的概念&quot;&gt;&lt;a href=&quot;#元组的概念&quot; class=&quot;headerlink&quot; title=&quot;元组的概念&quot;&gt;&lt;/a&gt;元组的概念&lt;/h2&gt;&lt;p&gt;元组和列表很相似，只不过元组一旦定义了以后就不能更改了。&lt;/p&gt;
&lt;h2 id=&quot;创建和访问元组&quot;&gt;&lt;a href=&quot;#创建和访问元组&quot; class=&quot;headerlink&quot; title=&quot;创建和访问元组&quot;&gt;&lt;/a&gt;创建和访问元组&lt;/h2&gt;&lt;p&gt;元组的创建“，”非常重要。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#常规创建元组的方法---()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)    &lt;span class=&quot;comment&quot;&gt;#创建一个元组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;t[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]    &lt;span class=&quot;comment&quot;&gt;#访问元组内的第一个元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;:]    &lt;span class=&quot;comment&quot;&gt;#访问索引为5之后的所有元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;t2 = t[:]     &lt;span class=&quot;comment&quot;&gt;#拷贝元组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#创建一个空元组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = ()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#创建只有一个元素的元组时一定要加,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,    &lt;span class=&quot;comment&quot;&gt;#这种语法也是合法的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;，&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;，&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;，&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;#这种也可以正常创建&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="tuple" scheme="https://ayoubu.github.io/tags/tuple/"/>
    
    <category term="元组" scheme="https://ayoubu.github.io/tags/%E5%85%83%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>python之list</title>
    <link href="https://ayoubu.github.io/archives/17219.html"/>
    <id>https://ayoubu.github.io/archives/17219.html</id>
    <published>2020-08-14T17:26:46.000Z</published>
    <updated>2020-08-15T03:01:35.767Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;List的结构&quot;&gt;&lt;a href=&quot;#List的结构&quot; class=&quot;headerlink&quot; title=&quot;List的结构&quot;&gt;&lt;/a&gt;List的结构&lt;/h2&gt;&lt;p&gt;Python中的list是以栈这种数据结构存储的，因此包含一些栈的特性。List中可以存放任何数据以及对象。&lt;/p&gt;
&lt;h2 id=&quot;向List中添加元素&quot;&gt;&lt;a href=&quot;#向List中添加元素&quot; class=&quot;headerlink&quot; title=&quot;向List中添加元素&quot;&gt;&lt;/a&gt;向List中添加元素&lt;/h2&gt;&lt;h3 id=&quot;append-方法&quot;&gt;&lt;a href=&quot;#append-方法&quot; class=&quot;headerlink&quot; title=&quot;append() 方法&quot;&gt;&lt;/a&gt;append() 方法&lt;/h3&gt;&lt;p&gt;向一个列表中添加一个元素。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;l = [&lt;span class=&quot;string&quot;&gt;&amp;#x27;大宝&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;l.append(&lt;span class=&quot;string&quot;&gt;&amp;#x27;小宝&amp;#x27;&lt;/span&gt;)   &lt;span class=&quot;comment&quot;&gt;#append 只能接受一个参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;&amp;#x27;大宝&amp;#x27;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;#x27;小宝&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="list" scheme="https://ayoubu.github.io/tags/list/"/>
    
  </entry>
  
  <entry>
    <title>写作以及博文管理</title>
    <link href="https://ayoubu.github.io/archives/6783.html"/>
    <id>https://ayoubu.github.io/archives/6783.html</id>
    <published>2020-08-13T14:04:10.000Z</published>
    <updated>2020-08-14T03:03:15.484Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;我的博客网站已经搭好，在此特别感谢一下&lt;a href=&quot;https://tding.top/archives/2bd6d82.html&quot;&gt;小丁&lt;/a&gt;的分享。我下的是NexT最新的主题，再搭建的过程踩了不少坑，不过大部分问题通过参考他的解决方案都完美解决了，一些小的地方，只要理解了他的解决方式，也都可以用相似的方法解决，具体的我就不在赘述了。&lt;/p&gt;
&lt;p&gt;在搭建好博客之后我就想开始我的博客之路了，可是关于怎么去写博客，网上虽然都介绍，但是我感觉都有点简单，对于要经常写博客的同学来说，可能有点不太友好。通过YouTube上的一位UP主&lt;a href=&quot;https://www.youtube.com/playlist?list=PLLAZ4kZ9dFpOMJR6D25ishrSedvsguVSm&quot;&gt;Mike Dan&lt;/a&gt;的分享，我整理出了一些方法，现在记录分享给大家。&lt;/p&gt;</summary>
    
    
    
    <category term="杂记" scheme="https://ayoubu.github.io/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="hexo" scheme="https://ayoubu.github.io/tags/hexo/"/>
    
    <category term="博文创建及管理" scheme="https://ayoubu.github.io/tags/%E5%8D%9A%E6%96%87%E5%88%9B%E5%BB%BA%E5%8F%8A%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
</feed>
