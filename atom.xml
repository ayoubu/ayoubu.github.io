<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>落空的个人博客</title>
  <icon>https://ayoubu.github.io/icon.png</icon>
  <subtitle>我慢慢明白了为什么我不快乐，因为我总是期待一个结果。</subtitle>
  <link href="https://ayoubu.github.io/atom.xml" rel="self"/>
  
  <link href="https://ayoubu.github.io/"/>
  <updated>2020-09-09T07:59:32.272Z</updated>
  <id>https://ayoubu.github.io/</id>
  
  <author>
    <name>落空</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MongDB练习</title>
    <link href="https://ayoubu.github.io/archives/53312.html"/>
    <id>https://ayoubu.github.io/archives/53312.html</id>
    <published>2020-09-09T15:19:48.000Z</published>
    <updated>2020-09-09T07:59:32.272Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;豆瓣数据相关&quot;&gt;&lt;a href=&quot;#豆瓣数据相关&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/MongoDB/"/>
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/tags/MongoDB/"/>
    
    <category term="豆瓣" scheme="https://ayoubu.github.io/tags/%E8%B1%86%E7%93%A3/"/>
    
  </entry>
  
  <entry>
    <title>MongDB 高级功能</title>
    <link href="https://ayoubu.github.io/archives/61509.html"/>
    <id>https://ayoubu.github.io/archives/61509.html</id>
    <published>2020-09-08T15:02:58.000Z</published>
    <updated>2020-09-09T07:48:36.902Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;聚合和管道&quot;&gt;&lt;a href=&quot;#聚合和管道&quot; class=&quot;headerlink&quot; title=&quot;聚合和管道&quot;&gt;&lt;/a&gt;聚合和管道&lt;/h2&gt;&lt;p&gt;聚合(aggregate)是基于数据处理的聚合管道，每个文档通过一个由多个阶段(stage) 组成的管道，可以对每个阶段的管道进行分组、过滤等功能，然后经过一系列的处理，输出相应的结果。&lt;/p&gt;
&lt;p&gt;表达式：&lt;code&gt;db.集合名称.aggregate(&amp;#123;管道:&amp;#123;表达式&amp;#125;&amp;#125;)&lt;/code&gt; &lt;/p&gt;
&lt;img src=&quot;https://i.imgur.com/DL72HF6.jpeg&quot; alt=&quot;聚合原理图&quot; style=&quot;zoom:80%;&quot; /&gt;</summary>
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/MongoDB/"/>
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Python MongoDB</title>
    <link href="https://ayoubu.github.io/archives/18082.html"/>
    <id>https://ayoubu.github.io/archives/18082.html</id>
    <published>2020-09-06T11:38:34.000Z</published>
    <updated>2020-09-09T08:17:22.509Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;PyMongo&quot;&gt;&lt;a href=&quot;#PyMongo&quot; class=&quot;headerlink&quot; title=&quot;PyMongo&quot;&gt;&lt;/a&gt;PyMongo&lt;/h2&gt;&lt;p&gt;在Python中需要一个MongoDB的驱动程序来访问MongoDB的数据库，本文将主要介绍Python中的MongoDB驱动程序“PyMongo”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装：&lt;/strong&gt; &lt;code&gt;pip install pymongo&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;测试：&lt;/strong&gt; &lt;code&gt;import pymongo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果运行后没有报错，则说明pymongo包安装成功。&lt;/p&gt;
&lt;h2 id=&quot;PyMongo基本操作&quot;&gt;&lt;a href=&quot;#PyMongo基本操作&quot; class=&quot;headerlink&quot; title=&quot;PyMongo基本操作&quot;&gt;&lt;/a&gt;PyMongo基本操作&lt;/h2&gt;&lt;h3 id=&quot;创建连接&quot;&gt;&lt;a href=&quot;#创建连接&quot; class=&quot;headerlink&quot; title=&quot;创建连接&quot;&gt;&lt;/a&gt;创建连接&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;需要在本地安装MongoDB社区版的服务，具体查看我的上一篇文档。&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;在使用MongoDB创建数据库之前，需要先新建一个MongoClient(Mongo的客户端) 对象，这个对象需要使用一个具体的MongoDB的访问连接，如果是在本地开启的服务，这个连接默认为：&lt;code&gt;&amp;quot;mongodb://localhost:27017/&amp;quot;&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/MongoDB/"/>
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/tags/MongoDB/"/>
    
    <category term="PyMongo" scheme="https://ayoubu.github.io/tags/PyMongo/"/>
    
    <category term="Python" scheme="https://ayoubu.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>什么是json</title>
    <link href="https://ayoubu.github.io/archives/49506.html"/>
    <id>https://ayoubu.github.io/archives/49506.html</id>
    <published>2020-09-05T11:35:13.000Z</published>
    <updated>2020-09-09T06:54:19.286Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;JSON的全称是 ”JavaScript Object Notation“，意思是JavaScript对象表示法，它是一种基于文本，独立于语言的轻量级数据交换格式。XML也是一种数据交换格式，为什么没有选择XML呢？因为XML虽然可以作为跨平台的数据交换格式，但是在JS（JavaScript）中处理XML非常不方便，同时XML标记比数据多，增加了交换产生的流量，而JSON没有附加的任何标记，在JS中可作为对象处理，所以我们更倾向于选择JSON来交换数据。&lt;/p&gt;
&lt;h2 id=&quot;JSON的两种数据结构&quot;&gt;&lt;a href=&quot;#JSON的两种数据结构&quot; class=&quot;headerlink&quot; title=&quot;JSON的两种数据结构&quot;&gt;&lt;/a&gt;JSON的两种数据结构&lt;/h2&gt;&lt;p&gt;JSON有两种表示结构，对象和数组。对象结构以&lt;code&gt;&amp;#123;&lt;/code&gt; 大括号开始，以&lt;code&gt;&amp;#125;&lt;/code&gt;大括号结束。中间的信息以键值对存储，并且以&lt;code&gt;,&lt;/code&gt;分割每条信息（最后一条数据不用加&lt;code&gt;,&lt;/code&gt;）。键值对的格式为：&lt;code&gt;key:value&lt;/code&gt;，即冒号左边为关键字，冒号右边为值。&lt;/p&gt;</summary>
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="json" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/json/"/>
    
    
    <category term="json" scheme="https://ayoubu.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB简介</title>
    <link href="https://ayoubu.github.io/archives/52778.html"/>
    <id>https://ayoubu.github.io/archives/52778.html</id>
    <published>2020-09-05T10:58:05.000Z</published>
    <updated>2020-09-09T06:54:19.272Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;MongoDB简介&quot;&gt;&lt;a href=&quot;#MongoDB简介&quot; class=&quot;headerlink&quot; title=&quot;MongoDB简介&quot;&gt;&lt;/a&gt;MongoDB简介&lt;/h2&gt;&lt;p&gt;MongoDB是一个基于分布式文件存储的数据库，由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。&lt;/p&gt;
&lt;p&gt;MongoDB将数据存储为一个文档，数据结构由键值对(Key : value)组成，MongoDB文档类似于JSON对象，字段值可以包含其它文档，数组及文档数组。&lt;/p&gt;
&lt;p&gt;MongoDB服务端可运行在Linux、Windows和Mac OS平台，支持32位和64位应用，默认端口为27017。本文所展示的为Windows平台的安装及使用。&lt;/p&gt;
&lt;p&gt;MongoDB支持各种编程语言：Python、Java、C++、PHP、C#等多种语言。&lt;/p&gt;
&lt;h2 id=&quot;MongoDB的优势&quot;&gt;&lt;a href=&quot;#MongoDB的优势&quot; class=&quot;headerlink&quot; title=&quot;MongoDB的优势&quot;&gt;&lt;/a&gt;MongoDB的优势&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;易扩展：&lt;/strong&gt; NoSQL（非关系型数据库）数据库种类繁多，但是一个共同的特点都是去掉关系型数据库的关系特性。数据之间无关系，这样就非常容易扩展。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;大数据量，高性能：&lt;/strong&gt; NoSQL数据库都具有非常高的读写性能，尤其在大数据量下，同样表现优秀。得益于它的无关系性，数据的结构简单&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;灵活的数据模型：&lt;/strong&gt; NoSQL无需事先为要存储的数据建立字段，随时可以存储自定义的数据格式。而在关系型数据库里，增删字段是一件非常麻烦的事情。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;缺点：&lt;/strong&gt; 由于它每条数据都是单独存储的，因此在存储过程中可能会包含大量重复信息，非常占用存储空间。&lt;/p&gt;
&lt;h2 id=&quot;MongDB的安装（windows）&quot;&gt;&lt;a href=&quot;#MongDB的安装（windows）&quot; class=&quot;headerlink&quot; title=&quot;MongDB的安装（windows）&quot;&gt;&lt;/a&gt;MongDB的安装（windows）&lt;/h2&gt;</summary>
    
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/MongoDB/"/>
    
    
    <category term="数据存储" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    
    <category term="MongoDB" scheme="https://ayoubu.github.io/tags/MongoDB/"/>
    
    <category term="PyMongo" scheme="https://ayoubu.github.io/tags/PyMongo/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之疑难杂症</title>
    <link href="https://ayoubu.github.io/archives/53805.html"/>
    <id>https://ayoubu.github.io/archives/53805.html</id>
    <published>2020-09-03T11:47:19.000Z</published>
    <updated>2020-09-09T06:54:19.267Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;电子表格打印&quot;&gt;&lt;a href=&quot;#电子表格打印&quot; class=&quot;headerlink&quot; title=&quot;电子表格打印&quot;&gt;&lt;/a&gt;电子表格打印&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;快捷键：&lt;/strong&gt;&lt;code&gt;Ctrl + P&lt;/code&gt; —</summary>
        
      
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="表格打印" scheme="https://ayoubu.github.io/tags/%E8%A1%A8%E6%A0%BC%E6%89%93%E5%8D%B0/"/>
    
    <category term="PPT" scheme="https://ayoubu.github.io/tags/PPT/"/>
    
    <category term="Word" scheme="https://ayoubu.github.io/tags/Word/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之图表</title>
    <link href="https://ayoubu.github.io/archives/27947.html"/>
    <id>https://ayoubu.github.io/archives/27947.html</id>
    <published>2020-09-01T12:29:12.000Z</published>
    <updated>2020-09-03T03:46:57.977Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;如何制作图表&quot;&gt;&lt;a href=&quot;#如何制作图表&quot; class=&quot;headerlink&quot; title=&quot;如何制作图表&quot;&gt;&lt;/a&gt;如何制作图表&lt;/h2&gt;&lt;p&gt;Excel中插入图表，首先选中数据区域，在插入选项卡中的图表区域中选择合适的图表，此时就会在表格中插入一个图表。然后在菜单栏中的设计选项卡下，点击添加元素，这里面有我们常用的图表设计的所有元素，可以根据自己的需要选择修改。&lt;/p&gt;
&lt;h2 id=&quot;如何制作复合图表&quot;&gt;&lt;a href=&quot;#如何制作复合图表&quot; class=&quot;headerlink&quot; title=&quot;如何制作复合图表&quot;&gt;&lt;/a&gt;如何制作复合图表&lt;/h2&gt;&lt;p&gt;复合图表是指在一个图表中，反应多个不同的信息，且不同信息的表现方式也不同，比如条形图和折线图相结合。我们假设我们要处理的数据如下图所示：&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="图表" scheme="https://ayoubu.github.io/tags/%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之数据透视表</title>
    <link href="https://ayoubu.github.io/archives/50892.html"/>
    <id>https://ayoubu.github.io/archives/50892.html</id>
    <published>2020-08-31T11:40:38.000Z</published>
    <updated>2020-09-01T14:05:54.222Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;初识数据透视表&quot;&gt;&lt;a href=&quot;#初识数据透视表&quot; class=&quot;headerlink&quot; title=&quot;初识数据透视表&quot;&gt;&lt;/a&gt;初识数据透视表&lt;/h2&gt;&lt;p&gt;数据透视表在使用的时候非常简单，但是我们得先想清楚一些问题，再开始动手。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;罗列什么、汇总什么&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;把需要罗列的部分放入行区域当中，需要计算的字段放入值区域当中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;他们是怎样的关系，要按照怎样的顺序来排列&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果是上下级关系的，那我们就全部放在行区域内，如果是交叉区域的，就放在列区域内，在同一个区域就要按照顺序来进行摆放&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以什么方式来进行汇总？是合计数、求平均、还是计数值？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;是否需要分页进行筛选？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用筛选器。&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="数据透视表" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E9%80%8F%E8%A7%86%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之路之微图表</title>
    <link href="https://ayoubu.github.io/archives/4338.html"/>
    <id>https://ayoubu.github.io/archives/4338.html</id>
    <published>2020-08-30T15:27:03.000Z</published>
    <updated>2020-09-01T14:05:54.220Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是微图表&quot;&gt;&lt;a href=&quot;#什么是微图表&quot; class=&quot;headerlink&quot; title=&quot;什么是微图表&quot;&gt;&lt;/a&gt;什么是微图表&lt;/h2&gt;&lt;p&gt;微图表简单的说就是在单元格内绘制的图表，用来直观的反应数据的大小，从而实现数据与图表的一体化。示例如下图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/fnxrIjW.png&quot; alt=&quot;微图表示例&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="微图表" scheme="https://ayoubu.github.io/tags/%E5%BE%AE%E5%9B%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之路-函数</title>
    <link href="https://ayoubu.github.io/archives/13281.html"/>
    <id>https://ayoubu.github.io/archives/13281.html</id>
    <published>2020-08-29T12:09:53.000Z</published>
    <updated>2020-09-01T14:05:54.212Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;函数基础&quot;&gt;&lt;a href=&quot;#函数基础&quot; class=&quot;headerlink&quot; title=&quot;函数基础&quot;&gt;&lt;/a&gt;函数基础&lt;/h2&gt;&lt;p&gt;函数是我们对原本数据进行计算统计或者用来增加字段的一种表达方式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;兼容性函数 — 38&lt;/li&gt;
&lt;li&gt;多维数据集函数 — 7&lt;/li&gt;
&lt;li&gt;数据库函数 — 12&lt;/li&gt;
&lt;li&gt;日期和时间函数  — 22&lt;/li&gt;
&lt;li&gt;工程函数 — 41&lt;/li&gt;
&lt;li&gt;财务函数 — 53&lt;/li&gt;
&lt;li&gt;信息函数 —17&lt;/li&gt;
&lt;li&gt;逻辑函数 — 7&lt;/li&gt;
&lt;li&gt;查找和引用函数 — 20&lt;/li&gt;
&lt;li&gt;数学和三角函数 — 63&lt;/li&gt;
&lt;li&gt;统计函数 — 98&lt;/li&gt;
&lt;li&gt;文本函数 — 27&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="函数" scheme="https://ayoubu.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Excel 快速录入和定位的小技巧</title>
    <link href="https://ayoubu.github.io/archives/57650.html"/>
    <id>https://ayoubu.github.io/archives/57650.html</id>
    <published>2020-08-28T15:16:09.000Z</published>
    <updated>2020-09-01T14:05:54.210Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;相似格式如何一秒快速录入&quot;&gt;&lt;a href=&quot;#相似格式如何一秒快速录入&quot; class=&quot;headerlink&quot; title=&quot;相似格式如何一秒快速录入&quot;&gt;&lt;/a&gt;相似格式如何一秒快速录入&lt;/h2&gt;&lt;p&gt;在数据录入的过程中经常需要录入一些相同的部分，比如同一个省份的开头是相同的，邮箱的后半部分。此时我们可以自定义单元格格式来加速我们数据录入的过程。&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据录入" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BD%95%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之路01</title>
    <link href="https://ayoubu.github.io/archives/21268.html"/>
    <id>https://ayoubu.github.io/archives/21268.html</id>
    <published>2020-08-25T11:55:36.000Z</published>
    <updated>2020-09-01T14:05:54.207Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Excel数据导入&quot;&gt;&lt;a href=&quot;#Excel数据导入&quot; class=&quot;headerlink&quot; title=&quot;Excel数据导入&quot;&gt;&lt;/a&gt;Excel数据导入&lt;/h2&gt;&lt;h3 id=&quot;从网页导入数据&quot;&gt;&lt;a href=&quot;#从网页导入数据&quot; class=&quot;headerlink&quot; title=&quot;从网页导入数据&quot;&gt;&lt;/a&gt;从网页导入数据&lt;/h3&gt;&lt;p&gt;有时候我们需要从网上获取一些数据进行分析，有时复制粘贴可能不是最好的方式，这时候我们可以先试试excel内置的从网页导入数据功能。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;数据--&amp;gt;自网站&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如：我们想对中国&lt;a href=&quot;http://quotes.money.163.com/0600050.html&quot;&gt;中国联通的股票行情&lt;/a&gt; 做一些分析，我们可以按照上述选项，输入对应的网址连接，如下图所示：&lt;/p&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Excel学习之路00</title>
    <link href="https://ayoubu.github.io/archives/37845.html"/>
    <id>https://ayoubu.github.io/archives/37845.html</id>
    <published>2020-08-25T11:47:09.000Z</published>
    <updated>2020-09-01T14:05:54.202Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Excel的知识体系&quot;&gt;&lt;a href=&quot;#Excel的知识体系&quot; class=&quot;headerlink&quot; title=&quot;Excel的知识体系&quot;&gt;&lt;/a&gt;Excel的知识体系&lt;/h2&gt;&lt;p&gt;用excel处理数据的基本流程如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据导入&lt;/li&gt;
&lt;li&gt;规范规则&lt;/li&gt;
&lt;li&gt;函数运算&lt;/li&gt;
&lt;li&gt;图表制作&lt;/li&gt;
&lt;li&gt;数据分析&lt;/li&gt;
&lt;li&gt;图表导出&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="数据分析" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    <category term="Excel" scheme="https://ayoubu.github.io/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/Excel/"/>
    
    
    <category term="Excel" scheme="https://ayoubu.github.io/tags/Excel/"/>
    
    <category term="数据分析" scheme="https://ayoubu.github.io/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>python之模块</title>
    <link href="https://ayoubu.github.io/archives/53523.html"/>
    <id>https://ayoubu.github.io/archives/53523.html</id>
    <published>2020-08-24T15:28:43.000Z</published>
    <updated>2020-08-25T03:17:41.355Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;模块&quot;&gt;&lt;a href=&quot;#模块&quot; class=&quot;headerlink&quot; title=&quot;模块&quot;&gt;&lt;/a&gt;模块&lt;/h2&gt;&lt;p&gt;模块是一种更高级的封装，它的作用是封装和组织我们写的代码，将代码分割成不同的模块，便于我们的测试和维护。同时模块也可以方便我们对代码的重用。在python中我们接触过的封装有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;容器  —&amp;gt;  数据的封装&lt;/li&gt;
&lt;li&gt;函数  —&amp;gt;  语句的封装&lt;/li&gt;
&lt;li&gt;类  —&amp;gt;  方法和属性的封装&lt;/li&gt;
&lt;li&gt;模块  —&amp;gt;  模块就是程序&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="模块" scheme="https://ayoubu.github.io/tags/%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>python之魔法方法</title>
    <link href="https://ayoubu.github.io/archives/52592.html"/>
    <id>https://ayoubu.github.io/archives/52592.html</id>
    <published>2020-08-22T11:51:09.000Z</published>
    <updated>2020-08-25T03:19:16.393Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;构造和析构&quot;&gt;&lt;a href=&quot;#构造和析构&quot; class=&quot;headerlink&quot; title=&quot;构造和析构&quot;&gt;&lt;/a&gt;构造和析构&lt;/h2&gt;&lt;h3 id=&quot;init-self-…-方法&quot;&gt;&lt;a href=&quot;#init-self-…-方法&quot; class=&quot;headerlink&quot; title=&quot;__init__(self,[, …]) 方法&quot;&gt;&lt;/a&gt;__init__(self,[, …]) 方法&lt;/h3&gt;&lt;p&gt;魔法方法总是被双下划线包围，例如__init__方法。魔法方法代表了python的强大之处。&lt;/p&gt;
&lt;p&gt;python中的默认构造函数为__init__(self,[, …]) 方法，init函数的返回值必须为None，否则会产生TpyeError的错误。&lt;/p&gt;
&lt;h3 id=&quot;new-cls-…-方法&quot;&gt;&lt;a href=&quot;#new-cls-…-方法&quot; class=&quot;headerlink&quot; title=&quot;__new__(cls,[, …]) 方法&quot;&gt;&lt;/a&gt;__new__(cls,[, …]) 方法&lt;/h3&gt;&lt;p&gt;注：python中创建对象时调用的第一个对象其实并不是init，而是__new__方法，new方法是用来创建类的一个新的实例的，一般情况下我们不需要对new方法进行重写，但是有时后我们继承了某些特殊类，需要修改它的默认创建对象的方式时，可以对new方法进行重写。如下所示。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="魔法方法" scheme="https://ayoubu.github.io/tags/%E9%AD%94%E6%B3%95%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>python之类和对象</title>
    <link href="https://ayoubu.github.io/archives/30561.html"/>
    <id>https://ayoubu.github.io/archives/30561.html</id>
    <published>2020-08-21T14:19:20.000Z</published>
    <updated>2020-08-25T03:17:41.355Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;关于类的基本概念&quot;&gt;&lt;a href=&quot;#关于类的基本概念&quot; class=&quot;headerlink&quot; title=&quot;关于类的基本概念&quot;&gt;&lt;/a&gt;关于类的基本概念&lt;/h2&gt;&lt;h3 id=&quot;对象&quot;&gt;&lt;a href=&quot;#对象&quot; class=&quot;headerlink&quot; title=&quot;对象&quot;&gt;&lt;/a&gt;对象&lt;/h3&gt;&lt;p&gt;对象是由&lt;strong&gt;属性&lt;/strong&gt;和&lt;strong&gt;方法&lt;/strong&gt;组成的，属性描述的是对象的一些固有性质，而方法则是对象可以执行的操作。对象是通过实例化类得到的。&lt;/p&gt;
&lt;h3 id=&quot;面向对象的特征&quot;&gt;&lt;a href=&quot;#面向对象的特征&quot; class=&quot;headerlink&quot; title=&quot;面向对象的特征&quot;&gt;&lt;/a&gt;面向对象的特征&lt;/h3&gt;&lt;p&gt;面向对象的主要特征为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封装：将对象的属性和方法进行封装，从而起到保护数据的作用。&lt;/li&gt;
&lt;li&gt;继承：子类自动共享父类之间数据和方法的机制。&lt;/li&gt;
&lt;li&gt;多态：不同对象对同一方法响应不同的方式。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="类" scheme="https://ayoubu.github.io/tags/%E7%B1%BB/"/>
    
    <category term="对象" scheme="https://ayoubu.github.io/tags/%E5%AF%B9%E8%B1%A1/"/>
    
    <category term="class" scheme="https://ayoubu.github.io/tags/class/"/>
    
  </entry>
  
  <entry>
    <title>python之异常处理</title>
    <link href="https://ayoubu.github.io/archives/19524.html"/>
    <id>https://ayoubu.github.io/archives/19524.html</id>
    <published>2020-08-19T17:22:13.000Z</published>
    <updated>2020-08-25T03:17:41.355Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是异常&quot;&gt;&lt;a href=&quot;#什么是异常&quot; class=&quot;headerlink&quot; title=&quot;什么是异常&quot;&gt;&lt;/a&gt;什么是异常&lt;/h2&gt;&lt;p&gt;程序中的异常是区别于错误存在的，错误往往指的是语法或者逻辑上的，最终导致编译器无法编译通过。而异常往往是由不受控制的输入或者输出导致的。在程序设计过程中，对于一些不受控制的输入，最好是引入异常处理。这样可以增强程序的健壮性，不至于遇到点问题程序就崩溃了。&lt;/p&gt;
&lt;h2 id=&quot;Python中的异常处理&quot;&gt;&lt;a href=&quot;#Python中的异常处理&quot; class=&quot;headerlink&quot; title=&quot;Python中的异常处理&quot;&gt;&lt;/a&gt;Python中的异常处理&lt;/h2&gt;&lt;p&gt;和一些高级语言一样，python也引入了try/except/finally语句块来处理异常，除此之外python还有断言(Assertions)来防止一些关键结果出问题。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="异常处理" scheme="https://ayoubu.github.io/tags/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    
    <category term="Exception" scheme="https://ayoubu.github.io/tags/Exception/"/>
    
  </entry>
  
  <entry>
    <title>python之文件</title>
    <link href="https://ayoubu.github.io/archives/58554.html"/>
    <id>https://ayoubu.github.io/archives/58554.html</id>
    <published>2020-08-19T11:22:35.000Z</published>
    <updated>2020-08-25T03:17:41.355Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h2 id=&quot;文件打开模式&quot;&gt;&lt;a href=&quot;#文件打开模式&quot; class=&quot;headerlink&quot;</summary>
        
      
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="文件" scheme="https://ayoubu.github.io/tags/%E6%96%87%E4%BB%B6/"/>
    
    <category term="os" scheme="https://ayoubu.github.io/tags/os/"/>
    
    <category term="os.path" scheme="https://ayoubu.github.io/tags/os-path/"/>
    
    <category term="pickle" scheme="https://ayoubu.github.io/tags/pickle/"/>
    
  </entry>
  
  <entry>
    <title>python之字典</title>
    <link href="https://ayoubu.github.io/archives/46747.html"/>
    <id>https://ayoubu.github.io/archives/46747.html</id>
    <published>2020-08-18T14:19:06.000Z</published>
    <updated>2020-08-24T02:46:54.194Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Python-字典-Dictionary&quot;&gt;&lt;a href=&quot;#Python-字典-Dictionary&quot; class=&quot;headerlink&quot; title=&quot;Python 字典(Dictionary)&quot;&gt;&lt;/a&gt;Python 字典(Dictionary)&lt;/h2&gt;&lt;p&gt;字典是另一种可变容器模型，且可存储任意类型对象。Python中的字典是唯一的&lt;strong&gt;映射类型&lt;/strong&gt;，与之对应的列表、元组等都为序列类型。&lt;/p&gt;
&lt;p&gt;字典的每个键值 &lt;strong&gt;key=&amp;gt;value&lt;/strong&gt; 对用冒号 &lt;strong&gt;:&lt;/strong&gt; 分割，每个键值对之间用逗号 &lt;strong&gt;,&lt;/strong&gt; 分割，整个字典包括在花括号 &lt;strong&gt;{}&lt;/strong&gt; 中 ,格式如下所示：&lt;code&gt;d = &amp;#123;key1 : value1, key2 : value2 &amp;#125;&lt;/code&gt;，索引的时候直接使用key值就行。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="字典" scheme="https://ayoubu.github.io/tags/%E5%AD%97%E5%85%B8/"/>
    
    <category term="Dictionary" scheme="https://ayoubu.github.io/tags/Dictionary/"/>
    
    <category term="集合" scheme="https://ayoubu.github.io/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>python之函数</title>
    <link href="https://ayoubu.github.io/archives/28278.html"/>
    <id>https://ayoubu.github.io/archives/28278.html</id>
    <published>2020-08-16T15:33:09.000Z</published>
    <updated>2020-08-18T06:58:46.542Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;初识python函数&quot;&gt;&lt;a href=&quot;#初识python函数&quot; class=&quot;headerlink&quot; title=&quot;初识python函数&quot;&gt;&lt;/a&gt;初识python函数&lt;/h2&gt;&lt;p&gt;在python中定义函数的关键字为&lt;strong&gt;def&lt;/strong&gt;，一个完整的函数应该包括函数名、参数、返回值。其中参数和返回值不是必要的。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFirstFunction&lt;/span&gt;():&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    print(&lt;span class=&quot;string&quot;&gt;&amp;#x27;这是我的第一个函数。&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; MyFirstFunction()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这是我的第一个函数。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;形参和实参&quot;&gt;&lt;a href=&quot;#形参和实参&quot; class=&quot;headerlink&quot; title=&quot;形参和实参&quot;&gt;&lt;/a&gt;形参和实参&lt;/h3&gt;&lt;p&gt;函数定义过程中的参数成为形参，因为它只是一个形式，表示占据一个参数的位置。实参就是在函数调用过程中实际传入的参数，此时参数是有值的，代表一定含义的。&lt;/p&gt;</summary>
    
    
    
    <category term="Python" scheme="https://ayoubu.github.io/categories/Python/"/>
    
    <category term="python 语法学习" scheme="https://ayoubu.github.io/categories/Python/python-%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python" scheme="https://ayoubu.github.io/tags/python/"/>
    
    <category term="函数" scheme="https://ayoubu.github.io/tags/%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
</feed>
